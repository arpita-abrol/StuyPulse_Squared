//Team lingering_pirates - Arpita Abrol, Ling Cheng
//APCS1 pd10
//HW58 -- Checking In
//2015-01-22


lingering_pirates                                                                                (_____)                                                              
APCS1 Final Project
POKEMON UML Diagram


PokemonDriver.java
Summary: runs the game

Status: Haven't started



Pokemon.java
Summary: create pokemon, determine what Pokemon can do

Status: in-progress - main part left is moves

Instance Vars:
-private String _name;     //pokemon name
-private String _type;     //pokemon type
-private int _level;       //level of pokemon
-private int _num;         //pokedex number
-private int[] _attack = new int[2];      //pokemon attack--determines attack strength
-private int[] _defense = new int[2];     //pokemon defense--determines damage taken
-private int[] _HP = new int[2];          //pokemon HP--determines max damage
-private int[] _speed = new int[2];       //pokemon speed--determines first attacker
-private int[] _exp = new int[2];         //pokemon exp--determines current exp/needed exp
-private int _numMoves;                   //number of moves pokemon has (max 4)
-private Objects[][] _moves = new Objects[4][4];  //pokemon moves [move1,move2,move3,move4][power1,power2,power3,power4]

Methods: 
Constructors:
- public Pokemon( String name )
- public Pokemon( String name, int level )
- public Pokemon( String name, int level, ArrayList<Objects> moveList )
Accessors: 
- public String getName()
- public String getType()
- public int getLevel()
- public int getNum()
- public int getAttackT()
- public int getAttack()
- public int getDefenseT()
- public int getDefense()
- public int getHPT()
- public int getHP()
- public int getSpeedT()
- public int getSpeed()
- public int getExpT()
- public int getExp()
- public String getMove1()
- public int getPower1()
- public String getMove2()
- public int getPower2()
- public String getMove3()
- public int getPower3()
- public String getMove4()
- public int getPower4()
- public int getNumMoves()
Mutators:
- public void setName( String newName )
- public void setLevel( int newLevel )
- public void setNum( int newNum )
- public void setAttackT( int newAttack )
- public void setAttack( int newAttack )
- public void setDefenseT( int newDefense )
- public void setDefense( int newDefense )
- public void setHPT( int newHP )
- public void setHP( int newHP )
- public void setSpeedT( int newSpeed )
- public void setSpeed( int newSpeed )
- public void setExpT( int newExp )
- public void setExp( int newExp )
- public void setMoves( Object[][] newMoves )
- public void setMove1( int newMove )
- public void setPower1()
- public void setMove2( int newMove )
- public void setPower2()
- public void setMove3( int newMove )
- public void setPower3()
- public void setMove4( int newMove )
- public void setPower4()
- public void setNumMoves( int newNumMoves )
Other methods:
- public void randomMove()
- public void levelUp()
- public void evolve()
- public boolean isAlive()
- public int attack( Pokemon opp )
- public String about( String pokemonName )
- public String toString()



Trainer.java
Summary: Creates your character. You start out with basic stats (money, Pokeballs, Potions). 
As you catch more Pokemon, the number of Pokemon you own and inventory will increase. 
Actions include throwing Pokeball, buying supplies, 

Status: 
-accessors and mutators are done
-need to work on a throw Pokeball method DONE
-use potion method DONE
-moving on map HAVEN'T STARTED
-buyPotions(), buyPokeballs(), shop() IN PROGRESS
-seeStats() HAVEN'T STARTED YET

Instance vars:
-String TrainerName 			//your name
-ArrayList<Pokemon> onMePokemon 	//the Pokemon you currently can fight with (6 max, start with 0)
-ArrayList<Pokemon> inLabPokemon 	//all the Pokemon you caught that aren't on you (start with 0)
-ArrayList Pokeballs			//all the Pokeballs you have (starts with [Pokeball , 5, Great Ball , 0, Ultra Ball , 0, Master Ball , 0])
-ArrayList Potions			//all the Potions you have (starts with [Potion , 10, Super Potion , 5, Hyper Potion , 5, Max Potion , 0])
-int PokeDollars			//all the money you have (start with 500)
-int numPokeOnMe			//number of Pokemon you are carrying with you (max 6, start with 0)
-int numPokeInLab			//number of Pokemon you have in your lab (start with 0)

Constructors:
-public Trainer()		//sets name to "Pokemon Trainer", empty onMePokemon, empty inLabPokemon, gives starting Pokeballs and Potions, and 500 PokeDollars
-public Trainer(String Name)	//same as above but sets your name to Name

Methods:
Accessors
-public String getTrainerName()		//returns your name
-public ArrayList<Pokemon> getPokeOnMe()	//returns ArrayList of all the Pokemon you're carrying
-public int getNumPokeOnMe()			//returns the number of Pokemon you're carrying
-public ArrayList<Pokemon> getPokeInLab()	//returns ArrayList of all the Pokemon in your lab
-public int getNumPokeInLab()			//returns the number of Pokemon in your lab
-public ArrayList getPotions()			//returns ArrayList of all your potions
-public String getPotionsStr()			//returns string of all your potions
-public ArrayList getPokeballs()		//returns ArrayList of all your Pokeballs
-public String getPokeballsStr()		//returns string of all your Pokeballs
-public int getMoney()				//returns amount of money you have
-public String getName(ArrayList arr, int choice)   //returns the name of a potion/pokeball given the number(1-4)
-public String getAmount(ArrayList arr, int choice) //returns the amount of a potion/pokeball you have given the number(1-4)

Mutators
-public void setPotions(int name, int num)	//increases the Potion at name-1 (name of potion) by num. 
						The trainer will be shown 1: Potion 2: Super Potion 3: Hyper Potion 4: Max Potion and he/she will
						choose a number(name) and amount(num).
-public voidset Pokeballs(int name, int num)	//increases the Pokeball at name-1 (name of Pokeball) by num. 
						The trainer will be shown 1: Pokeball 2: Great Ball 3: Ultra Ball 4: Master Ball and he/she will
						choose a number(name) and amount(num).
-public void setMoney(int newMoney)		//changes PokeDollars to newMoney

Others
-public void createPokeballs()				//gives Trainer basic Pokeball stats
-public void createPotions()				//gives Trainer basic Potion stats
-public void throwPokeball(Pokemon pokemonToCatch)	//allows you to throw one of your Pokeballs and catch the Pokemon
							//calls blinkingPokeball after Pokeball is thrown
-public Boolean blinkingPokeball			//calculates the rate of success of catching the Pokemon
(Pokemon pokemonToCatch, int pokeball)			//if successfull, returns true
-public void catchPokemon(Pokemon newPokemon)		//send newly caught Pokemon to backpack or lab
-public void chooseStarter()				//allows you to choose 1 of 3 starter Pokemon and send it to your bag
-public String checkBag()				//returns string of your Potions, Pokeballs, and money
-public void usePotions(Pokemon pokemon)		//allows you to choose a potion to use on pokemon
-public int addHP(int choice)				//returns the HP the Pokemon will add depending on the potion#
-public Boolean isNum(String str)			//returns whether input is 1, 2, 3, or 4
-public void buyPotions()				//takes you to the Potion shop and lets you buy potions
-public Boolean canAfford(int cost, int amount)		//returns whether you can buy something based on the cost, how much you're buying and how much money you have
-public void buyPotions()				..IN PROGRESS
-public void buyPokeballs()				..IN PROGRESS
-public void fight()					..IN PROGRESS



AdventureMode.java
Summary: 'mini-game'- go through and battle pokemon and other trainers

Status: Mapping out the towns

Insance vars:
- private int _town1
- private int _town2
- private int _maxMove
- private int _currentMove

Methods:
- public String forward()
- public String battle()



Gym.java
Summary: create gyms

Status: in progress

Insance vars:
-String _gymLeader
-String[][] _pokemon
-int _henchmen
-boolean _defeated

Methods:
- public String battleHenchmen()
- public String battleLeader()

Note: hardcode v. CSV?



Town.java
Summary: creates and control towns

Status: in progress

Insance vars:
- private String _name
- private int _townNum

Methods:
- public String shop()
- public String heal()
- public String changePokemon()
- public String gymBattle( int townNum )
- public String toString()



CSVMaster.java
Summary: used for ArrayLists of CSVS

Status: Done, until more CSV files need to be added

Methods:
- CSVtoArray()
- singleLine()
- searchCSV()



CSV FILES:
status: various; some complete, some in-progress

- PokemonEvolution.csv
- PokemonMoves.csv
- PokemonStats.csv
- Moves.csv
- Adventure0.csv
- Adventure1.csv
- Adventure2.csv
- Adventure3.csv
- Adventure4.csv
- Adventure5.csv
- Adventure6.csv
- Adventure7.csv
- Adventure8.csv
- Gyms.csv





Thoughts/ideas: 
-make trainer an abstact file, and have four subs: your character, gym leaders, henchmen, and random trainers
-hardcode gym leaders into towns, abstract